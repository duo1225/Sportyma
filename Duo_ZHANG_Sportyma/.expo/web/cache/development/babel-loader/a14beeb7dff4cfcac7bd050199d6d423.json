{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Input, Text, Button } from 'react-native-elements';\nimport { nameValidator, paysValidator } from \"../core/utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddNewClub = function AddNewClub(props) {\n  var _React$useState = React.useState('Liverpool F.C.'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState('Angleterre'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      pays = _React$useState4[0],\n      setPays = _React$useState4[1];\n\n  var nameRef = React.useRef();\n  var paysRef = React.useRef();\n\n  function inscription() {\n    var newName = nameRef.current.value;\n    var newPays = paysRef.current.value;\n    var isNom = nameValidator(newName);\n    var isPays = paysValidator(newPays);\n    setName(function (name) {\n      return newName;\n    });\n    setPays(function (pays) {\n      return newPays;\n    });\n\n    if (isNom || isPays) {\n      alert('nom ou pays est vide!');\n      return;\n    } else {\n      var action = {\n        type: \"ADD_USER\",\n        value: {\n          nom: this.state.nom,\n          email: this.state.email,\n          password: this.state.password\n        }\n      };\n      this.props.dispatch(action);\n      props.navigation.navigate('ListClubs');\n    }\n  }\n\n  return _jsxs(View, {\n    style: {\n      textAlign: 'center',\n      flex: 1\n    },\n    children: [_jsx(Text, {\n      style: {\n        marginBottom: 8,\n        textAlign: 'center'\n      },\n      h3: true,\n      children: \"Ajouter un nouveau club\"\n    }), _jsx(TextInput, {\n      label: \"name\",\n      returnKeyType: \"next\",\n      ref: nameRef,\n      style: {\n        height: 50,\n        borderColor: 'gray',\n        borderWidth: 1,\n        margin: 10\n      }\n    }), _jsx(TextInput, {\n      label: \"pays\",\n      returnKeyType: \"next\",\n      ref: paysRef,\n      style: {\n        height: 50,\n        borderColor: 'gray',\n        borderWidth: 1,\n        margin: 10\n      }\n    }), _jsx(Button, {\n      title: 'submit',\n      containerStyle: {\n        width: 150,\n        marginHorizontal: 50,\n        marginVertical: 10,\n        marginLeft: 100\n      },\n      onPress: function onPress() {\n        return inscription();\n      }\n    })]\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(AddNewClub);","map":{"version":3,"sources":["/Users/zhangduo/Documents/formation UHA/React Native/Test/Duo_ZHANG_Sportyma_function/Screens/AddNewClub.js"],"names":["React","Component","Input","Text","Button","nameValidator","paysValidator","AddNewClub","props","useState","name","setName","pays","setPays","nameRef","useRef","paysRef","inscription","newName","current","value","newPays","isNom","isPays","alert","action","type","nom","state","email","password","dispatch","navigation","navigate","textAlign","flex","marginBottom","height","borderColor","borderWidth","margin","width","marginHorizontal","marginVertical","marginLeft","mapStateToProps","connect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View,TextInput,Alert } from 'react-native';\nimport { Input, Text,Button } from 'react-native-elements';\n\nimport {nameValidator,paysValidator} from \"../core/utils\"\n\n const AddNewClub =(props)=> {\n  const [name,setName] = React.useState('Liverpool F.C.');\n  const [pays,setPays] = React.useState('Angleterre');\n  const nameRef = React.useRef();\n  const paysRef = React.useRef();\n \n  function inscription(){\n    const newName = nameRef.current.value;\n    const newPays = paysRef.current.value;\n    const isNom=nameValidator(newName);\n    const isPays=paysValidator(newPays);\n    setName(name=>newName);\n    setPays(pays=>newPays);\n\n    if(isNom||isPays){\n      alert('nom ou pays est vide!');\n      return;\n  }else{\n      const action={\n        type: \"ADD_USER\", \n        value: {nom:this.state.nom,email:this.state.email,password:this.state.password}}\n      this.props.dispatch(action)\n      props.navigation.navigate('ListClubs')\n  }\n\n  }\n    return(\n    <View style={{\n      textAlign:'center',\n      flex: 1,}}>\n      <Text style={{ marginBottom: 8,\n      textAlign:'center'\n      }} h3>\n         Ajouter un nouveau club\n      </Text>\n      <TextInput\n                label=\"name\"\n                returnKeyType=\"next\"\n                ref={nameRef}\n                style={{height:50,borderColor:'gray',borderWidth:1,margin:10}}\n            />\n       <TextInput\n                label=\"pays\"\n                returnKeyType=\"next\"\n                ref={paysRef}\n                style={{height:50,borderColor:'gray',borderWidth:1,margin:10}}\n            />\n       <Button\n                title={'submit'}\n                containerStyle={{\n                  width:150,\n                  marginHorizontal: 50,\n                  marginVertical: 10,\n                  marginLeft:100,\n                }}\n                onPress={()=>inscription()}\n              />\n    </View>);\n}\n\n\nconst mapStateToProps=(state)=>{\n  return state\n}\nexport default connect(mapStateToProps)(AddNewClub)"]},"metadata":{},"sourceType":"module"}